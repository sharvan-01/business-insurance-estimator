{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/sharableURL.cjs"],
  "sourcesContent": ["//new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// //DURING FIRST ESTIMATE CREATION\n// //get the data after the last button is clicked and send it all to the db\n// //generate a random ID of alpha numeric convention and send it along\n// //append the ID to the URL and edit the UI to this URL\n// import axios from 'axios';\n\n// import getAllIndustries from './index.cjs';\n\n// var values = [];\n// var identifier;\n// var count = 0;\n// let data;\n// var estimate;\n// var getAPI = 'https://x8ki-letl-twmt.n7.xano.io/api:MR0gzHqf/estimates?identifier=';\n// var id;\n// var industryID;\n// var estimateExists = false;\n// //VIST ON THE URL - on documet load\n// returningUser();\n// function returningUser() {\n//   const queryString = window.location.search;\n//   const urlParams = new URLSearchParams(queryString);\n//   id = urlParams.get('id');\n//   console.log('printing the ID of the record' + id);\n//   if (id) {\n//     console.log('id exists');\n//     //$('.loader-screen').css('display', 'flex');\n//     retriveValuesFromDB(id);\n//     estimateExists = true; //do not create a new record on the dB\n//   } else console.log('id does not exist');\n//   module.exports = estimateExists;\n// }\n\n// //fetching estimate values from the dB API\n// async function retriveValuesFromDB(id) {\n//   getAPI = getAPI + id;\n//   await fetch(getAPI)\n//     .then((response) => response.json())\n//     .then((data) => {\n//       estimate = data;\n//       fillInValues(estimate);\n//     });\n// }\n\n// //filling in the form values from the estimate retrived from the dB\n// async function fillInValues(estimate) {\n//   // await getAllIndustries();\n//   console.log(estimate);\n//   var form = $('#wf-form-Business-insurance-form')[0];\n//   form[0].value = estimate.Name;\n//   form[1].value = estimate.Email;\n//   form[2].value = estimate.Phone;\n//   form[3].value = estimate.Company_name;\n//   console.log(estimate.Industry);\n//   form[4].value = estimate.Industry;\n//   industryID = estimate.Industry;\n//   form[6].value = estimate.Year_of_incorporation;\n//   form[7].value = estimate.Number_of_employees;\n//   form[8].value = estimate.Capital_raised;\n//   form[9].value = estimate.Last_financial_year_revenue;\n//   $('#first-continue-button').click();\n//   $('#second-continue').click();\n//   var industryInput = $('#bi-industry');\n//   //industryInput.trigger('change');\n//   $('#otp-continue-button').click();\n//   $('#fourth-continue-button').click(); //so on click over here we're creating another record\n//   $('.loader-screen').css('display', 'none');\n// }\n\n// function createURL(data) {\n//   identifier = data.id;\n//   console.log('the ID: ');\n//   console.log(identifier);\n//   let url = new URL('https://webdev.plumhq.com/business-insurance-estimator');\n//   url.searchParams.set('id', identifier);\n//   var linkElement = $(\"[data-element='estimateUrl']\")[0];\n//   linkElement.innerHTML = url;\n//   var urlElement = $('#bi-sharable-url-link');\n//   urlElement.setAttribute('href', url);\n// }\n"],
  "mappings": ";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
