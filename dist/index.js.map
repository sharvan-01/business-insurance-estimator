{
  "version": 3,
  "sources": ["../src/index.js"],
  "sourcesContent": ["/* eslint-disable prefer-destructuring */\n//adding industries to the SELECT field on the UI\n\nimport axios from 'axios';\n\nfunction listIndustries(data) {\n  const industryOption = Object.entries(data);\n  industryOption.forEach((element) => {\n    // console.log(element);\n    $('#bi-industry').append(\n      `<option value=\"` + element[1].id + `\">` + element[1].Industry_name + `</option>`\n    );\n  });\n  disableFirstOption();\n}\n\n$('#first-continue-button').on('click', function () {\n  nameOfPerson = $('#name').val();\n  $('#insert-name')[0].innerHTML = nameOfPerson;\n});\n\n$('#second-continue').on('click', function () {\n  console.log('second continue button clicked');\n  industryID = $('#bi-industry').val();\n  console.log(industryID);\n  productsAPI.search = '?id=' + industryID;\n  apiFetch(productsAPI);\n  companyName = $('#bi-company').val();\n  $('#insert-company-name')[0].innerHTML = companyName;\n  $('#insert-company-2')[0].innerHTML = companyName;\n  createDataTwo(true);\n});\n\nvar myHeaders = new Headers();\nmyHeaders.append('Content-Type', 'application/json');\n\nasync function createContact(properties) {\n  try {\n    const response = await fetch(\n      'https://business-insurance-estimator-sharvan-01.vercel.app/api/handler',\n      {\n        method: 'POST',\n        headers: myHeaders,\n        body: JSON.stringify({ properties }),\n        mode: 'cors',\n      }\n    );\n    const data = await response.json();\n    hubspotID = data.id;\n    console.log('the identifier is: ' + hubspotID);\n\n    //const data = await response.json();\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function updateContact(properties) {\n  try {\n    console.log('the update properties object');\n    console.log(properties);\n    const response = await fetch(\n      'https://business-insurance-estimator-sharvan-01.vercel.app/api/handler',\n      {\n        method: 'POST',\n        headers: myHeaders,\n        body: properties,\n        mode: 'cors',\n      }\n    );\n    if (response.ok) {\n      const data = await response.json();\n      console.log('the data sent to update is:');\n      console.log(data);\n      // Handle success\n    } else {\n      const errorData = await response.json();\n      console.error(errorData);\n      // Handle error\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// async function updateContact(properties) {\n//   try {\n//     const response = await fetch(\n//       'https://business-insurance-estimator-sharvan-01.vercel.app/api/handler',\n//       {\n//         method: 'PATCH',\n//         headers: myHeaders,\n//         body: JSON.stringify({ properties }),\n//         mode: 'cors',\n//       }\n//     );\n//     const data = await response.json();\n//     hubspotID = data.id;\n//     console.log('the identifier is: ' + hubspotID);\n\n//     //const data = await response.json();\n//   } catch (error) {\n//     console.error(error);\n//   }\n// }\n\n//when industry is selected call the products API\n$('#bi-industry').change(function () {\n  console.log('change event triggered');\n  industryID = $('#bi-industry').val();\n  console.log(industryID);\n  productsAPI.search = '?id=' + industryID;\n  apiFetch(productsAPI);\n});\n\n$('#funding-round').change(function () {\n  fundingRound = 'seed';\n  fundingRound = $('#funding-round').val();\n});\n\n$('#last-financial-year-revenue').change(function () {\n  revenueAmount = 'seed';\n  revenueAmount = $('#last-financial-year-revenue').val();\n});\n\n$('#fourth-continue-button').on('click', function () {\n  console.log('industry ID');\n  console.log(industryID);\n  resetAllValues();\n  products.forEach((element) => {\n    // finding all elements that have a recommendation of no and disabling them\n    if (element[1].Recommendation === 'No') {\n      const temps = $(`[data-product='${element[0]}']`);\n      console.log(temps[0]);\n      temps[0].style.display = 'none';\n    }\n  });\n  findRecommendedProducts(products);\n  createDataThree();\n\n  //getting all the input values and sending them to the HS file\n  // { firstname: \"John\", lastname: \"Doe\" }\n\n  // createContact(values);\n});\n\nfunction createDataTwo() {\n  var properties = {};\n  var inputFields = document.querySelectorAll('input[data-screen=\"two\"]');\n  var selectFields = document.querySelectorAll('select[data-screen=\"two\"]');\n  const elements = [...inputFields, ...selectFields];\n  console.log(elements);\n  elements.forEach((input) => {\n    const internalName = input.dataset.internalname;\n    const value = input.value;\n    properties[internalName] = value;\n  });\n  properties['business_industry'] = $('#bi-industry :selected').text();\n  values['property'] = properties;\n  console.log('second continue button data');\n  console.log(values.property);\n  //createContact(values.property);\n}\n\nfunction createDataThree() {\n  var properties = {};\n  var inputFields = document.querySelectorAll('input[data-screen=\"three\"]');\n  var selectFields = document.querySelectorAll('select[data-screen=\"three\"]');\n  const elements = [...inputFields, ...selectFields];\n  console.log(elements);\n  elements.forEach((input) => {\n    const internalName = input.dataset.internalname;\n    const value = input.value;\n    properties[internalName] = value;\n  });\n  // values['id'] = hubspotID;\n  values['property'] = properties;\n  console.log('third continue button data');\n  console.log(values);\n  updateContact(values['property'], hubspotID);\n}\n\nfunction finalDataSubmit() {\n  values['bi_products_chosen'] = Object.keys(Object.fromEntries(chosenProductsMap)).join(';');\n}\n\nfunction resetAllValues() {\n  products.forEach((element) => {\n    setSumInsuredFieldStatus(element[0], true);\n    const radioButton = $(`[data-checkbox=${element[0]}]`);\n    if (radioButton[0].childNodes[2].checked) checkTheCheckbox(radioButton, element[0]);\n  });\n  recommendedPlans = [];\n  chosenProductsMap.clear();\n  totalPrice = 0;\n  grandTotal = 0;\n}\n\n$('.bi-plan').on('click', function (e) {\n  console.log('this is the target');\n  console.log(e.target);\n  //checking if click is on the SI SELECT\n  if (e.target.nodeName === 'SELECT') {\n    console.log('click on select ');\n    return;\n  }\n\n  if (e.target.nodeName === 'INPUT') {\n    console.log('click on input ');\n    return;\n  }\n\n  //looping through all the products to find the selected product HTML\n  const productCode = $(this).attr('data-product'); //getting product code\n  console.log('the product code');\n  console.log(productCode);\n\n  if (e.target.attributes[1] && e.target.attributes[1].value === 'learn') {\n    console.log('click on learn ');\n    return;\n  }\n\n  //if asset insurance\n  if (productCode === 'ai') {\n    console.log('asset insurance is working');\n    const assetRadioButton = $(`[data-checkbox=${productCode}]`);\n    checkTheCheckbox(assetRadioButton, productCode);\n    aiSelectStatus = assetRadioButton[0].childNodes[2].checked;\n    assetInsurance(aiSelectStatus);\n    return;\n  }\n\n  if (productCode === 'cd') {\n    const RadioButton = $(\"[data-checkbox='cd']\");\n    checkTheCheckbox(RadioButton, productCode);\n    selectStatus = RadioButton[0].childNodes[2].checked;\n    crimeInsurance(selectStatus);\n    return;\n  }\n\n  products.forEach((element) => {\n    console.log('the element[0]');\n    console.log(element[0]);\n    if (element[0] === productCode) {\n      console.log('the element[1]');\n      console.log(element[1]);\n      // eslint-disable-next-line prefer-destructuring\n      specificProductElement = element[1];\n      return;\n    }\n  });\n  console.log('the selected prod: ' + productCode);\n  const radioButton = $(`[data-checkbox=${productCode}]`);\n  checkTheCheckbox(radioButton, productCode);\n  selectStatus = radioButton[0].childNodes[2].checked;\n  setSumInsuredFieldStatus(productCode, selectStatus);\n  if (selectStatus) {\n    findTheLargestSumInsured(productCode, specificProductElement, fundingRound, revenueAmount);\n  }\n  calculation(productCode, selectStatus);\n  // }\n});\n\n$(\"[data-input='si']\").change(function () {\n  let newSI = $(this);\n  newSI = newSI[0].value;\n  let selectedProduct = $(this);\n  selectedProduct = selectedProduct.attr('data-si');\n  let pricingElement = $(`[data-price=${selectedProduct}]`);\n  pricingElement = pricingElement[0];\n  let newSumInsured;\n  products.forEach((element) => {\n    if (element[0] === selectedProduct) {\n      newSumInsured = element[1].fundingJSON.find(({ sumInsured }) => sumInsured === newSI);\n    }\n  });\n  if (newSumInsured === undefined && newSI === '1') {\n    newSI = '3';\n    products.forEach((element) => {\n      if (element[0] === selectedProduct) {\n        newSumInsured = element[1].fundingJSON.find(({ sumInsured }) => sumInsured === newSI);\n      }\n    });\n  }\n\n  if (newSumInsured === undefined) {\n    newSI = '3';\n    products.forEach((element) => {\n      if (element[0] === selectedProduct) {\n        newSumInsured = element[1].fundingJSON[0];\n      }\n    });\n  }\n  const newPrice = newSumInsured.price;\n  pricingElement.childNodes[1].innerHTML = parseInt(newPrice).toLocaleString('en-IN', {\n    maximumFractionDigits: 0,\n    style: 'currency',\n    currency: 'INR',\n  });\n  const tempProd = chosenProductsMap.get(selectedProduct);\n  console.log('the products current price is: ' + tempProd.get('price'));\n  //subtracting the previous amount from the totalPrice\n  totalPrice = parseInt(totalPrice) - parseInt(tempProd.get('price'));\n  tempProd.set('price', newPrice);\n  tempProd.set('si', newSI);\n  console.log(chosenProductsMap);\n  calculation(selectedProduct, true);\n});\n\nfunction setSumInsuredFieldStatus(selectedProduct, selectStatus) {\n  //if a product is not recommended for a company then they should not be able to add it\n  if (selectStatus) $(`[data-si='${selectedProduct}']`).prop('disabled', false);\n  else $(`[data-si='${selectedProduct}']`).prop('disabled', true);\n}\n\nfunction assetInsuranceFieldStatus(aiSelectStatus) {\n  var elements = $(\"[data-si ='ai']\");\n  if (!aiSelectStatus) {\n    elements[0].disabled = true;\n    elements[1].disabled = true;\n  } else {\n    elements[0].disabled = false;\n    elements[1].disabled = false;\n  }\n}\n\n//asset insurance\n//creating the pricing element\n$('#no-of-assets').change(function () {\n  noOfAssets = $('#no-of-assets').val();\n  $('#avg-cost').trigger('change');\n});\n$('#avg-cost').change(function () {\n  valueOfAssets = $('#avg-cost').val();\n  if (valueOfAssets) {\n    assetCost = parseInt(noOfAssets) * parseInt(valueOfAssets) * 0.0125;\n    totalPrice = parseInt(assetCost) + parseInt(totalPrice);\n    chosenProductsMap.set('ai', new Map([['price', assetCost]]));\n    $(\"[data-si='ai']\").val = assetCost;\n    const total = $(\"[data-element='total']\")[0];\n    const gst = $(\"[data-element='gst']\")[0];\n    const grandTotalElement = $(\"[data-element='grandTotal']\")[0];\n    total.innerHTML = totalPrice.toLocaleString('en-IN', {\n      maximumFractionDigits: 0,\n      style: 'currency',\n      currency: 'INR',\n    });\n    grandTotalElement.innerHTML = grandTotal.toLocaleString('en-IN', {\n      maximumFractionDigits: 0,\n      style: 'currency',\n      currency: 'INR',\n    });\n    gst.innerHTML = gstPrice.toLocaleString('en-IN', {\n      maximumFractionDigits: 0,\n      style: 'currency',\n      currency: 'INR',\n    });\n    let pricingElement = $(\"[data-price='ai']\");\n    pricingElement = pricingElement[0];\n    pricingElement.childNodes[1].innerHTML = parseInt(assetCost).toLocaleString('en-IN', {\n      maximumFractionDigits: 0,\n      style: 'currency',\n      currency: 'INR',\n    });\n  }\n});\n\nfunction assetInsurance(aiSelectStatus) {\n  assetInsuranceFieldStatus(aiSelectStatus);\n  if (aiSelectStatus) {\n    if (document.querySelector(`[data-price='ai']`)) {\n      const dataPrice = $(\"[data-price='ai']\");\n      dataPrice[0].style.display = 'flex';\n    }\n    if (!document.querySelector(`[data-price='ai']`)) {\n      const newElement = $('.pricing-holder')[0].cloneNode(true);\n      newElement.setAttribute('data-price', 'ai');\n      newElement.style.display = 'flex';\n      newElement.childNodes[0].innerHTML = productNamesMap.get('ai');\n      newElement.childNodes[1].innerHTML = parseInt(assetCost).toLocaleString('en-IN', {\n        maximumFractionDigits: 0,\n        style: 'currency',\n        currency: 'INR',\n      });\n      $('.final-pricing-wrapper').append(newElement);\n    }\n  } else {\n    chosenProductsMap.delete('ai');\n    const dataPrice = $(\"[data-price='ai']\");\n    dataPrice[0].style.display = 'none';\n  }\n  return;\n}\n\nfunction crimeInsurance(selectStatus) {\n  if (selectStatus) {\n    if (document.querySelector(\"[data-price='cd']\")) {\n      document.querySelector(\"[data-price='cd']\").style.display = 'flex';\n    }\n\n    chosenProductsMap.set('cd', 'contact sales');\n\n    if (!document.querySelector(\"[data-price='cd']\")) {\n      const newElement = $('.pricing-holder')[0].cloneNode(true);\n      newElement.setAttribute('data-price', 'cd');\n      newElement.style.display = 'flex';\n      newElement.childNodes[0].innerHTML = productNamesMap.get('cd');\n      newElement.childNodes[1].innerHTML = 'Schedule a call';\n      $('.final-pricing-wrapper').append(newElement);\n    }\n  } else {\n    chosenProductsMap.delete('cd');\n    document.querySelector(\"[data-price='cd']\").style.display = 'none';\n  }\n}\n\nfunction calculation(productCode, selectStatus) {\n  const total = $(\"[data-element='total']\")[0];\n  const gst = $(\"[data-element='gst']\")[0];\n  const grandTotalElement = $(\"[data-element='grandTotal']\")[0];\n  const prodDeets = chosenProductsMap.get(productCode);\n  const price = prodDeets.get('price');\n\n  if (selectStatus) {\n    if (document.querySelector(`[data-price='${productCode}']`)) {\n      document.querySelector(`[data-price='${productCode}']`).style.display = 'flex';\n    }\n\n    if (!document.querySelector(`[data-price='${productCode}']`)) {\n      //this does not work cause it's not checking if that paticular product's element exists or not, it simply checks for one variable\n      var newElement = $('.pricing-holder')[0].cloneNode(true);\n      newElement.setAttribute('data-price', productCode);\n      newElement.style.display = 'flex';\n      newElement.childNodes[0].innerHTML = productNamesMap.get(productCode);\n      newElement.childNodes[1].innerHTML = parseInt(price).toLocaleString('en-IN', {\n        maximumFractionDigits: 0,\n        style: 'currency',\n        currency: 'INR',\n      });\n    }\n    totalPrice = parseInt(totalPrice) + parseInt(price);\n    grandTotal = parseInt(totalPrice) * 0.18 + parseInt(totalPrice);\n    gstPrice = parseInt(totalPrice) * 0.18;\n    total.innerHTML = totalPrice.toLocaleString('en-IN', {\n      maximumFractionDigits: 0,\n      style: 'currency',\n      currency: 'INR',\n    });\n    grandTotalElement.innerHTML = grandTotal.toLocaleString('en-IN', {\n      maximumFractionDigits: 0,\n      style: 'currency',\n      currency: 'INR',\n    });\n    gst.innerHTML = gstPrice.toLocaleString('en-IN', {\n      maximumFractionDigits: 0,\n      style: 'currency',\n      currency: 'INR',\n    });\n    $('.final-pricing-wrapper').append(newElement);\n  } else {\n    const dataPrice = $(`[data-price='${productCode}']`);\n    console.log('the price holder element');\n    console.log(dataPrice);\n    dataPrice[0].style.display = 'none';\n    chosenProductsMap.delete(productCode);\n    totalPrice = parseInt(totalPrice) - parseInt(price);\n    gstPrice = parseInt(totalPrice) * 0.18;\n    grandTotal = parseInt(totalPrice) * 0.18 + parseInt(totalPrice);\n    total.innerHTML = totalPrice.toLocaleString('en-IN', {\n      maximumFractionDigits: 0,\n      style: 'currency',\n      currency: 'INR',\n    });\n    gst.innerHTML = gstPrice.toLocaleString('en-IN', {\n      maximumFractionDigits: 0,\n      style: 'currency',\n      currency: 'INR',\n    });\n    grandTotalElement.innerHTML = grandTotal.toLocaleString('en-IN', {\n      maximumFractionDigits: 0,\n      style: 'currency',\n      currency: 'INR',\n    });\n  }\n}\n\n//when user clicks the radio button prevent default\n$(\"[data-element='radio']\").click(function (e) {\n  console.log('yay');\n  e.preventDefault();\n});\n\nfunction changeSumInsured(product, largestSI) {\n  const siField = $(`[data-si='${product}']`);\n  siField[0].value = largestSI; //replace with data-variable\n}\n\nfunction checkTheCheckbox(radioButton, productName) {\n  if (radioButton[0].childNodes[2].checked) {\n    radioButton[0].childNodes[0].style.display = 'none';\n    radioButton[0].childNodes[2].checked = false;\n    radioButton[0].childNodes[1].classList.remove('w--redirected-checked');\n    if (radioButton[1]) {\n      radioButton[1].childNodes[0].style.display = 'none';\n      radioButton[1].childNodes[2].checked = false;\n      radioButton[1].childNodes[1].classList.remove('w--redirected-checked');\n    }\n    var tempProd = $(`[data-product='${productName}']`);\n    tempProd.removeClass('selected');\n  } else {\n    radioButton[0].childNodes[0].style.display = 'block';\n    radioButton[0].childNodes[2].checked = true;\n    radioButton[0].childNodes[1].classList.add('w--redirected-checked');\n    if (radioButton[1]) {\n      radioButton[1].childNodes[0].style.display = 'block';\n      radioButton[1].childNodes[2].checked = true;\n      radioButton[1].childNodes[1].classList.add('w--redirected-checked');\n    }\n    var tempProd = $(`[data-product='${productName}']`);\n    tempProd.addClass('selected');\n  }\n}\n\nasync function apiFetch(api) {\n  await fetch(api)\n    .then((response) => response.json())\n    .then((data) => {\n      console.log(api);\n      saveProductData(data);\n    });\n}\n// export { apiFetch };\n\nfunction saveProductData(data) {\n  products = Object.entries(data);\n}\n\n//iterating through all the products\n//function is only called for recommended products\nfunction findRecommendedProducts(products) {\n  products.forEach((element) => {\n    //finding all elements that have a recommendation of must_have and pushing into an array\n    if (element[1].Recommendation === 'must_have') {\n      const goodPill = $(`[data-product='${element[0]}'] [data-pill='good']`);\n      goodPill.css('display', 'none');\n      recommendedPlans.push(element[0]); //[cgl]\n      //var recommendedProduct = $(`[data-product=${element[0]}]`);\n      const radioButton = $(`[data-checkbox=${element[0]}]`);\n      checkTheCheckbox(radioButton, element[0]);\n      const largestSI = findTheLargestSumInsured(\n        element[0],\n        element[1],\n        fundingRound,\n        revenueAmount\n      );\n      assetInsuranceFieldStatus(aiSelectStatus);\n      setSumInsuredFieldStatus(element[0], true);\n      changeSumInsured(element[0], largestSI); //sending the entire product data to findTheLargestSumInsured()\n      calculation(element[0], radioButton[0].childNodes[2].checked);\n    } else {\n      console.log('this product is not recommende' + element[0]);\n      const recPill = $(`[data-product='${element[0]}'] [data-pill='rec']`);\n      recPill.css('display', 'none');\n    }\n  });\n}\n\nfunction findTheLargestSumInsured(productCode, product, fundingRound, revenueAmount) {\n  const fundingSI = product.fundingJSON.find(({ category }) => category === fundingRound); //you will have to receive which funding category they chose over here\n  console.log('the funding SI:');\n  console.log(fundingSI);\n  const revenueSI = product.revenueJSON.find(\n    ({ category }) => category === revenueAmount //you will have to receive which revenue category they chose over here\n  );\n  const estimate = fundingSI.sumInsured > revenueSI.sumInsured ? fundingSI : revenueSI; //finding the largest SI for this particular product\n  console.log('the sum insured is: ' + estimate.sumInsured);\n  console.log('the price is: ' + estimate.price);\n  chosenProductsMap = chosenProductsMap.set(\n    productCode,\n    new Map([\n      ['price', estimate.price],\n      ['si', estimate.sumInsured],\n    ])\n  );\n  return estimate.sumInsured;\n}\n\n//main function\n//global variables\nvar industryID = 2,\n  fundingRound = 'seed',\n  revenueAmount = '100cr',\n  products = 0,\n  specificProductElement,\n  selectStatus,\n  elementExists = false,\n  price,\n  companyName,\n  totalPrice = 0,\n  gstPrice = 0,\n  noOfAssets = 0,\n  valueOfAssets = 0,\n  assetCost = 0,\n  nameOfPerson,\n  aiSelectStatus = false,\n  grandTotal = 0,\n  hubspotID = '42118001';\nvar values = {};\nconst productsAPI = new URL(\n  `https://x8ki-letl-twmt.n7.xano.io/api:MR0gzHqf/industry?id=${industryID}`\n);\nvar chosenProductsMap = new Map();\nvar productNamesMap = new Map([\n  ['do', 'Directors and officers'],\n  ['cgl', 'Commercial General Liability'],\n  ['pi', 'Errors and omissions'],\n  ['ci', 'Cyber Insurance'],\n  ['ai', 'Asset insurance'],\n  ['cd', 'Crime and Dishonesty'],\n]);\nconst industryAPI = 'https://x8ki-letl-twmt.n7.xano.io/api:MR0gzHqf/get-all-industries';\n\n// module.exports = { products };\nvar recommendedPlans = [];\n//apiFetch(productsAPI); //at this point we have all the products related to the users industry\n\n//calling the API to fetch industry details\n\ndocument.addEventListener(\n  'DOMContentLoaded',\n  function () {\n    fetch(industryAPI)\n      .then((response) => response.json())\n      .then((data) => {\n        listIndustries(data);\n      });\n  },\n  false\n);\n\n//disable first option for all select field questions\nfunction disableFirstOption() {\n  const selectElements = document.querySelectorAll(\"[data-question='select']\");\n  selectElements.forEach((element) => {\n    const { options } = element;\n    options[0].disabled = true;\n  });\n}\n"],
  "mappings": "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",
  "names": ["selectStatus", "aiSelectStatus", "products", "fundingRound", "revenueAmount"]
}
