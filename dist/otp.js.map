{
  "version": 3,
  "sources": ["../src/otp.js"],
  "sourcesContent": ["/* eslint-disable prefer-destructuring */\n//generate OTP\nvar phone;\nconsole.log('OTP file loaded');\n//when the button before the OTP screen is clicked, send the OTP\n\n$('#second-continue').on('click', function () {\n  $('#resend-otp-button').prop('disabled', true);\n  // $(\"#otp-continue-button\").prop(\"disabled\", true);\n  phone = $('#phone').val();\n  // email = $('#bi-email').val();\n  phone = parseInt(phone);\n  phone = '+91' + phone;\n  getOTP(phone); //get the OTP for this phone number\n  startTimer(); //start timer for resend OTP function\n});\n\nfunction startTimer() {\n  let remainingTimeElement = document.querySelector('#remainingTime'),\n    secondsLeft = 5;\n\n  const Timer = setInterval(() => {\n    if (secondsLeft <= 0) {\n      clearInterval(Timer);\n      $('#resend-otp-button').prop('disabled', false);\n    }\n    remainingTimeElement.value = secondsLeft;\n    remainingTimeElement.textContent = '(' + secondsLeft + ')';\n    secondsLeft -= 1;\n  }, 1000);\n}\n\n//common headers between get and verify OTP.\nvar myHeaders = new Headers();\nmyHeaders.append('Content-Type', 'application/json');\nmyHeaders.append('Access-Control-Allow-Origin', 'https://plumhq.com');\nmyHeaders.append('Access-Control-Allow-Credentials', 'true');\n\n//get OTP from API\nasync function getOTP(phone) {\n  var raw = JSON.stringify({\n    phone: phone,\n    channel: 'SMS',\n    key: 'businessOTC',\n  });\n\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow',\n  };\n\n  fetch(\n    'https://api-prod.plumhq.com/api/v2/authentication/phoneVerfication/otp/generate',\n    requestOptions\n  )\n    .then((response) => response.json())\n    .then((result) => saveID(result))\n    .catch((error) => console.log('error'));\n}\n\n//convert response to JSON and saving the ID to a variable\nfunction saveID(result) {\n  id = Object.entries(result);\n  id = id[0][1];\n  console.log(id);\n}\n\n//call verify OTP function on button click\n$('#verify-otp').on('click', function () {\n  verifyOTP();\n});\n\n//verify OTP\nasync function verifyOTP() {\n  var otp = $('#otp-field').val();\n\n  var raw = JSON.stringify({\n    code: otp,\n    requestId: id,\n    channel: 'SMS',\n  });\n\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow',\n  };\n\n  fetch(\n    'https://api-prod.plumhq.com/api/v2/authentication/phoneVerfication/otp/verify',\n    requestOptions\n  )\n    .then((response) => response.json())\n    .then((result) => verify(result))\n    .catch((error) => errorMessage());\n\n  function verify(result) {\n    var verify = Object.entries(result);\n    verify = verify[0];\n    if (verify[1]) {\n      console.log('this is pressed');\n      $('#otp-continue-button').click();\n    } else incorrectOTP();\n  }\n\n  function incorrectOTP() {\n    errorMessage.innerHTML = 'Incorrect OTP';\n    errorMessage.style.display('block');\n    setTimeout(() => {\n      errorMessage.style.display('hide');\n    }, '3000');\n  }\n\n  function errorMessage() {\n    errorMessage.innerHTML = 'An error occured.';\n  }\n}\n\n$('#resend-otp-button').on('click', function () {\n  getOTP();\n});\n\nvar id;\nvar errorMessage = $('#incorrect-otp');\n"],
  "mappings": ";;;AAEA,MAAI;AACJ,UAAQ,IAAI,iBAAiB;AAG7B,IAAE,kBAAkB,EAAE,GAAG,SAAS,WAAY;AAC5C,MAAE,oBAAoB,EAAE,KAAK,YAAY,IAAI;AAE7C,YAAQ,EAAE,QAAQ,EAAE,IAAI;AAExB,YAAQ,SAAS,KAAK;AACtB,YAAQ,QAAQ;AAChB,WAAO,KAAK;AACZ,eAAW;AAAA,EACb,CAAC;AAED,WAAS,aAAa;AACpB,QAAI,uBAAuB,SAAS,cAAc,gBAAgB,GAChE,cAAc;AAEhB,UAAM,QAAQ,YAAY,MAAM;AAC9B,UAAI,eAAe,GAAG;AACpB,sBAAc,KAAK;AACnB,UAAE,oBAAoB,EAAE,KAAK,YAAY,KAAK;AAAA,MAChD;AACA,2BAAqB,QAAQ;AAC7B,2BAAqB,cAAc,MAAM,cAAc;AACvD,qBAAe;AAAA,IACjB,GAAG,GAAI;AAAA,EACT;AAGA,MAAI,YAAY,IAAI,QAAQ;AAC5B,YAAU,OAAO,gBAAgB,kBAAkB;AACnD,YAAU,OAAO,+BAA+B,oBAAoB;AACpE,YAAU,OAAO,oCAAoC,MAAM;AAG3D,iBAAe,OAAOA,QAAO;AAC3B,QAAI,MAAM,KAAK,UAAU;AAAA,MACvB,OAAOA;AAAA,MACP,SAAS;AAAA,MACT,KAAK;AAAA,IACP,CAAC;AAED,QAAI,iBAAiB;AAAA,MACnB,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAEA;AAAA,MACE;AAAA,MACA;AAAA,IACF,EACG,KAAK,CAAC,aAAa,SAAS,KAAK,CAAC,EAClC,KAAK,CAAC,WAAW,OAAO,MAAM,CAAC,EAC/B,MAAM,CAAC,UAAU,QAAQ,IAAI,OAAO,CAAC;AAAA,EAC1C;AAGA,WAAS,OAAO,QAAQ;AACtB,SAAK,OAAO,QAAQ,MAAM;AAC1B,SAAK,GAAG,CAAC,EAAE,CAAC;AACZ,YAAQ,IAAI,EAAE;AAAA,EAChB;AAGA,IAAE,aAAa,EAAE,GAAG,SAAS,WAAY;AACvC,cAAU;AAAA,EACZ,CAAC;AAGD,iBAAe,YAAY;AACzB,QAAI,MAAM,EAAE,YAAY,EAAE,IAAI;AAE9B,QAAI,MAAM,KAAK,UAAU;AAAA,MACvB,MAAM;AAAA,MACN,WAAW;AAAA,MACX,SAAS;AAAA,IACX,CAAC;AAED,QAAI,iBAAiB;AAAA,MACnB,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAEA;AAAA,MACE;AAAA,MACA;AAAA,IACF,EACG,KAAK,CAAC,aAAa,SAAS,KAAK,CAAC,EAClC,KAAK,CAAC,WAAW,OAAO,MAAM,CAAC,EAC/B,MAAM,CAAC,UAAUC,cAAa,CAAC;AAElC,aAAS,OAAO,QAAQ;AACtB,UAAIC,UAAS,OAAO,QAAQ,MAAM;AAClC,MAAAA,UAASA,QAAO,CAAC;AACjB,UAAIA,QAAO,CAAC,GAAG;AACb,gBAAQ,IAAI,iBAAiB;AAC7B,UAAE,sBAAsB,EAAE,MAAM;AAAA,MAClC;AAAO,qBAAa;AAAA,IACtB;AAEA,aAAS,eAAe;AACtB,MAAAD,cAAa,YAAY;AACzB,MAAAA,cAAa,MAAM,QAAQ,OAAO;AAClC,iBAAW,MAAM;AACf,QAAAA,cAAa,MAAM,QAAQ,MAAM;AAAA,MACnC,GAAG,MAAM;AAAA,IACX;AAEA,aAASA,gBAAe;AACtB,MAAAA,cAAa,YAAY;AAAA,IAC3B;AAAA,EACF;AAEA,IAAE,oBAAoB,EAAE,GAAG,SAAS,WAAY;AAC9C,WAAO;AAAA,EACT,CAAC;AAED,MAAI;AACJ,MAAI,eAAe,EAAE,gBAAgB;",
  "names": ["phone", "errorMessage", "verify"]
}
